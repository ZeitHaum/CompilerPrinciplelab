float float_abs(float x_0)
	0: def tmp0, 0
	1: cvt_i2f tmp2, tmp0
	2: flss tmp3, x_0, tmp2
	3: fdef tmp6, 0.0
	4: fdef tmp7, 0.0
	5: feq tmp6, tmp3, tmp7
	6: cvt_f2i tmp5, tmp6
	7: if tmp5 goto [pc, 5]
	8: def tmp8, -1
	9: cvt_i2f tmp10, tmp8
	10: fmul tmp11, tmp10, x_0
	11: return tmp11
	12: return x_0
end

float circle_area(int radius_0)
	0: fdef tmp12, 03.141592653589793
	1: cvt_i2f tmp14, radius_0
	2: fmul tmp15, tmp12, tmp14
	3: cvt_i2f tmp17, radius_0
	4: fmul tmp18, tmp15, tmp17
	5: mul tmp19, radius_0, radius_0
	6: fdef tmp20, 03.141592653589793
	7: cvt_i2f tmp22, tmp19
	8: fmul tmp23, tmp22, tmp20
	9: fadd tmp24, tmp18, tmp23
	10: def tmp25, 2
	11: cvt_i2f tmp27, tmp25
	12: fdiv tmp28, tmp24, tmp27
	13: return tmp28
end

int float_eq(float a_0,float b_0)
	0: fsub tmp30, a_0, b_0
	1: call tmp29, float_abs(tmp30)
	2: fdef tmp31, 0.000001
	3: flss tmp32, tmp29, tmp31
	4: fdef tmp35, 0.0
	5: fdef tmp36, 0.0
	6: feq tmp35, tmp32, tmp36
	7: cvt_f2i tmp34, tmp35
	8: if tmp34 goto [pc, 3]
	9: return 1
	10: goto [pc, 2]
	11: return 0
end

void error()
	0: call tmp37, putch(101)
	1: call tmp38, putch(114)
	2: call tmp39, putch(114)
	3: call tmp40, putch(111)
	4: call tmp41, putch(114)
	5: call tmp42, putch(10)
	6: return null
end

void ok()
	0: call tmp43, putch(111)
	1: call tmp44, putch(107)
	2: call tmp45, putch(10)
	3: return null
end

void assert(int cond_0)
	0: def tmp46, 0
	1: not tmp47, cond_0
	2: not tmp49, tmp47
	3: if tmp49 goto [pc, 3]
	4: call tmp50, error()
	5: goto [pc, 2]
	6: call tmp51, ok()
	7: return null
end

void assert_not(int cond_0)
	0: not tmp53, cond_0
	1: if tmp53 goto [pc, 3]
	2: call tmp54, error()
	3: goto [pc, 2]
	4: call tmp55, ok()
	5: return null
end

void global()
	0: fdef RADIUS_, 0.0
	1: fmov RADIUS_, 5.5
	2: fdef PI_, 0.0
	3: fmov PI_, 03.141592653589793
	4: fdef EPS_, 0.0
	5: fmov EPS_, 0.000001
	6: fdef PI_HEX_, 0.0
	7: fmov PI_HEX_, 3.141592741012573242
	8: fdef HEX2_, 0.0
	9: fmov HEX2_, 0.078125
	10: fdef FACT_, 0.0
	11: fmov FACT_, -33000.000000
	12: fdef EVAL1_, 0.0
	13: fmov EVAL1_, 95.033188
	14: fdef EVAL2_, 0.0
	15: fmov EVAL2_, 34.557518
	16: fdef EVAL3_, 0.0
	17: fmov EVAL3_, 34.557518
	18: fdef CONV1_, 0.0
	19: fmov CONV1_, 233.000000
	20: fdef CONV2_, 0.0
	21: fmov CONV2_, 4095.000000
	22: def MAX_, 0
	23: mov MAX_, 1000000000
	24: def TWO_, 0
	25: mov TWO_, 2
	26: def THREE_, 0
	27: mov THREE_, 3
	28: def FIVE_, 0
	29: mov FIVE_, 5
	30: return null
end

int main()
	0: call null, global()
	1: fdef f_0, 0.0
	2: fmov f_0, -0.100000
	3: call tmp57, float_eq(0.078125, -33000.000000)
	4: call tmp56, assert_not(tmp57)
	5: call tmp59, float_eq(95.033188, 34.557518)
	6: call tmp58, assert_not(tmp59)
	7: call tmp61, float_eq(34.557518, 34.557518)
	8: call tmp60, assert(tmp61)
	9: call tmp64, circle_area(5)
	10: call tmp65, circle_area(5)
	11: call tmp63, float_eq(tmp64, tmp65)
	12: call tmp62, assert(tmp63)
	13: call tmp67, float_eq(233.000000, 4095.000000)
	14: call tmp66, assert_not(tmp67)
	15: fdef tmp69, 1.5
	16: fdef tmp71, 0.0
	17: fdef tmp72, 0.0
	18: feq tmp71, tmp69, tmp72
	19: cvt_f2i tmp70, tmp71
	20: if tmp70 goto [pc, 2]
	21: call tmp73, ok()
	22: fdef tmp75, 1
	23: fdef tmp77, 0.0
	24: fdef tmp78, 0.0
	25: feq tmp77, tmp75, tmp78
	26: cvt_f2i tmp76, tmp77
	27: if tmp76 goto [pc, 2]
	28: call tmp79, ok()
	29: fdef tmp81, .0
	30: fdef tmp83, 0.0
	31: fdef tmp84, 0.0
	32: feq tmp83, tmp81, tmp84
	33: cvt_f2i tmp82, tmp83
	34: if tmp82 goto [pc, 8]
	35: fdef tmp86, 0
	36: fdef tmp88, 0.0
	37: fdef tmp89, 0.0
	38: feq tmp88, tmp86, tmp89
	39: cvt_f2i tmp87, tmp88
	40: if tmp87 goto [pc, 2]
	41: call tmp90, error()
	42: def tmp91, 0
	43: if tmp91 goto [pc, 7]
	44: fdef tmp93, 0.3
	45: fdef tmp95, 0.0
	46: fdef tmp96, 0.0
	47: feq tmp95, tmp93, tmp96
	48: cvt_f2i tmp94, tmp95
	49: if tmp94 goto [pc, 2]
	50: call tmp97, ok()
	51: def i_0, 0
	52: mov i_0, 1
	53: def p_0, 0
	54: mov p_0, 0
	55: alloc arr_0, 10
	56: fdef tmp98, 1.
	57: store tmp98, arr_0, 0
	58: fdef tmp99, 2.000000
	59: store tmp99, arr_0, 1
	60: fdef tmp100, 0.0
	61: store tmp100, arr_0, 2
	62: fdef tmp101, 0.0
	63: store tmp101, arr_0, 3
	64: fdef tmp102, 0.0
	65: store tmp102, arr_0, 4
	66: fdef tmp103, 0.0
	67: store tmp103, arr_0, 5
	68: fdef tmp104, 0.0
	69: store tmp104, arr_0, 6
	70: fdef tmp105, 0.0
	71: store tmp105, arr_0, 7
	72: fdef tmp106, 0.0
	73: store tmp106, arr_0, 8
	74: fdef tmp107, 0.0
	75: store tmp107, arr_0, 9
	76: def len_0, 0
	77: call tmp108, getfarray(arr_0)
	78: mov len_0, tmp108
	79: def tmp109, 1000000000
	80: lss tmp110, i_0, tmp109
	81: not tmp112, tmp110
	82: if tmp112 goto [pc, 30]
	83: fdef input_1, 0.0
	84: call tmp113, getfloat()
	85: fmov input_1, tmp113
	86: fdef area_1, 0.0
	87: fdef tmp114, 03.141592653589793
	88: fmul tmp115, tmp114, input_1
	89: fmul tmp116, tmp115, input_1
	90: fmov area_1, tmp116
	91: fdef area_trunc_1, 0.0
	92: cvt_f2i tmp118, input_1
	93: call tmp117, circle_area(tmp118)
	94: fmov area_trunc_1, tmp117
	95: def tmp119, p_0
	96: def tmp121, p_0
	97: load tmp122, arr_0, tmp121
	98: fadd tmp123, tmp122, input_1
	99: store tmp123, arr_0, tmp119
	100: call tmp124, putfloat(area_1)
	101: call tmp125, putch(32)
	102: cvt_f2i tmp127, area_trunc_1
	103: call tmp126, putint(tmp127)
	104: call tmp128, putch(10)
	105: def tmp129, 10
	106: mul tmp130, i_0, tmp129
	107: mov i_0, tmp130
	108: def tmp131, 1
	109: add tmp132, p_0, tmp131
	110: mov p_0, tmp132
	111: goto [pc, -32]
	112: call tmp133, putfarray(len_0, arr_0)
	113: return 0
end

GVT:
	RADIUS_ float 0
	PI_ float 0
	EPS_ float 0
	PI_HEX_ float 0
	HEX2_ float 0
	FACT_ float 0
	EVAL1_ float 0
	EVAL2_ float 0
	EVAL3_ float 0
	CONV1_ float 0
	CONV2_ float 0
	MAX_ int 0
	TWO_ int 0
	THREE_ int 0
	FIVE_ int 0
